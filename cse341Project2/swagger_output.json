{
  "swagger": "2.0",
  "info": {
    "title": "CSE341Project2 Node.js",
    "description": "CSE341 Project 2: Medication Inventory System REST API.\n This is a Node.js project, developed as part of the CSE341 course Project 2 assignment.\n This API serves as a comprehensive medication management system, featuring routes for medication, wholesaler, user profile, and medication usage management. The / route displays the user's login status and details, utilizing GitHub authentication. Notably, it supports logging in, logging out, and GitHub authentication callbacks. The /meds and /wholesalers subroutes facilitate CRUD operations for managing medications and wholesalers, respectively. The /profile subroute handles user profiles, allowing the fetching of all profiles and updating existing ones. Moreover, the /usage subroute focuses on medication usage, supporting operations such as fetching usage by date or ID, logging usage, updating usage, and deleting usage records. The controllers play a vital role in these operations, with medController managing CRUD operations for medications, medGetController handling medication information retrieval, medUsageController overseeing medication usage, and profileController managing user profiles. The wholesalerController specifically handles wholesaler pricing information, offering functionality to add, update, delete, and fetch pricing data."
  },
  "host": "cse341project2-00el.onrender.com",
  "basePath": "/",
  "schemes": ["https"],
  "paths": {
    "/meds/": {
      "get": {
        "tags": ["Medication Management"],
        "description": "Retrieve all medications from the database. This will give a list of all medications in the database with their details.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["Medication Management"],
        "description": "Add a new medication to the database. This will add the medication to the medList. All feilds are required.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "medName": {
                  "example": "any"
                },
                "medStrength": {
                  "example": "10mg"
                },
                "medUnit": {
                  "example": "tablet, capsule, etc."
                },
                "medClass": {
                  "example": "2,3,4, or 5"
                },
                "medInventory": {
                  "example": "any number"
                },
                "medThreshold": {
                  "example": "any number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },

    "/meds/{id}": {
      "get": {
        "tags": ["Medication Management"],
        "description": "Retrieve information for a single medication by the object _id(the id created by MongoDB). This will retrieve the medication's details. Such as: name, strength, unit, class, inventory, and threshold.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": ["Medication Management"],
        "description": "Update information for a single medication by its object _id(the id created by MongoDB). Like adding a new medication to the database, all fields are required.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "medName": {
                  "example": "any"
                },
                "medStrength": {
                  "example": "10mg"
                },
                "medUnit": {
                  "example": "tablet, capsule, etc."
                },
                "medClass": {
                  "example": "2,3,4, or 5"
                },
                "medInventory": {
                  "example": "any number"
                },
                "medThreshold": {
                  "example": "any number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Medication Management"],
        "description": "Delete a medication by its object _id(the id created by MongoDB). This will not delete medication usage logs for the medication, only the medication and details from the medList collection.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },

    "/meds/name/{name}": {
      "get": {
        "tags": ["Medication Management"],
        "description": "Retrieve medication information by name. This will allow the user to search for a medication by partial or full spelling of the name. It will return all medications that match the search criteria. The search is case insensitive. The more detailed the search, the more accurate the results will be.",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },

    "/usage/byDate/{date}": {
      "get": {
        "tags": ["Medication Usage"],
        "description": "Retrieve medication usage information for all medications filled on a specific date. The format to be used for the date should be YYYY-MM-DD.",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },

    "/usage/byId/{id}": {
      "get": {
        "tags": ["Medication Usage"],
        "description": "Retrieve medication usage information for a specific medication by the medId(not the object _id created by MongoDB). This will retrieve all usage logs for the medication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },

    "/usage/{id}": {
      "post": {
        "tags": ["Medication Usage"],
        "description": "Log medication usage using the medication's medId(not the object _id created by MongoDB). This will also update the medication's inventory in the medList collection.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "medUnitsUsed": {
                  "example": "any number"
                },
                "medUsedDate": {
                  "example": "any date"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },

      "put": {
        "tags": ["Medication Usage"],
        "description": "Update a medication usage by object _id(the object _id created by MongoDB in the medUsage collection). This will also update the inventory in the medList collection.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "medUnitsUsed": {
                  "example": "any number"
                },
                "medUsedDate": {
                  "example": "YYYY-MM-DD"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },

      "delete": {
        "tags": ["Medication Usage"],
        "description": "Delete a medication usage by object _id(the object _id created by MongoDB in the medUsage collection). This will also update the inventory in the medList collection.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },

    "/profile/": {
      "get": {
        "tags": ["Profile Management"],
        "description": "Retrieve all user profiles from the database. This is for users only, and not for any medication information.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },

      "put": {
        "tags": ["Profile Management"],
        "description": "Update a user profile by ID. The ID cannot be altered. The Display Name is the only required field, but the email field can be updated if needed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "displayName": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },

    "/wholesalers/": {
      "get": {
        "tags": ["Wholesaler Management"],
        "description": "Retrieve all wholesalers pricing info from the database. This will retrieve pricing info for all medications that are listed in the wholesalers collection.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },

      "post": {
        "tags": ["Wholesaler Management"],
        "description": "Add a wholesaler's pricing for a medication by the medId(not the object _id created by MongoDB) to the database. All fields are required.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "compName": {
                  "example": "any"
                },
                "medId": {
                  "example": "any medId"
                },
                "medCost": {
                  "example": "any number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },

    "/wholesalers/{id}": {
      "put": {
        "tags": ["Wholesaler Management"],
        "description": "Update a medication's pricing and wholesaler info by the medId(not the object _id created by MongoDB).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "compName": {
                  "example": "any"
                },
                "medCost": {
                  "example": "any number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },

      "delete": {
        "tags": ["Wholesaler Management"],
        "description": "Delete a medication pricing info by medId(not the object _id created by MongoDB). This will not delete medication usage logs or med info from the other collections for the medication.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },

      "get": {
        "tags": ["Wholesaler Management"],
        "description": "Retrieve wholesaler medication pricing information for a specific medication by medId(not the object _id created by MongoDB) from the wholesalers collection.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
